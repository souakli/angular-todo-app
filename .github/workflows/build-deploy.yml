name: Build and Deploy Multilingual App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Permet de lancer le workflow manuellement depuis l'interface GitHub
  workflow_dispatch:

# Annule les exécutions en cours du même workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  i18n-build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # Étape 1: Extraction des traductions avec format spécifié
      - name: Extract i18n messages
        run: npx ng extract-i18n --output-path src/locale --format=xlf

      # Étape 2: Upload des fichiers de traduction
      - name: Upload translations
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
        env:
          LOKALISE_API_KEY: '7cd9343a4ee5bd6c3d2066f4cc9eedc8e6de6388'
        run: node upload-translations.mjs

      # Étape 3: Download des traductions mises à jour
      - name: Download translations
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
        env:
          LOKALISE_API_KEY: '7cd9343a4ee5bd6c3d2066f4cc9eedc8e6de6388'
        run: node download-translations.mjs

      # Étape 4: Commit des nouvelles traductions si elles ont changé
      - name: Commit updated translations
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
        continue-on-error: true
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add src/locale/*.xlf package-lock.json
          git commit -m "chore: update translations and dependencies" || echo "No changes to commit"
          git push || echo "No changes to push"

      # Étape 5: Build de l'application avec toutes les langues
      - name: Build multilingual app
        run: npx ng build --localize --configuration=production --base-href=/angular-todo-app/

      # Étape 6: Vérifier la structure des répertoires
      - name: Check build directory
        run: |
          ls -la dist/
          ls -la dist/angular-todo-app/ || true
          ls -la dist/browser/ || true

      # Étape 7: Créer le fichier 404.html
      - name: Create 404.html
        run: |
          cd dist/angular-todo-app/browser
          for lang in en fr ar; do
            if [ -d "$lang" ]; then
              cp $lang/index.html $lang/404.html
            fi
          done

      # Étape 8: Déploiement sur GitHub Pages
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/angular-todo-app/browser
          enable_jekyll: false
          allow_empty_commit: true
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
