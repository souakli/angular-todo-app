name: Build and Deploy Multilingual App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

env:
  BUILD_PATH: ./dist/angular-todo-app/browser

jobs:
  cancel:
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

  build:
    needs: cancel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Extract i18n messages
        run: |
          npx ng extract-i18n --output-path src/locale --format=xlf
          echo "Messages extracted to messages.xlf"

      - name: Upload translations to Lokalise
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
        env:
          LOKALISE_API_KEY: ${{ secrets.LOKALISE_API_KEY }}
        run: |
          node upload-translations.mjs
          echo "Translations uploaded to Lokalise"

      - name: Download translations from Lokalise
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
        env:
          LOKALISE_API_KEY: ${{ secrets.LOKALISE_API_KEY }}
        run: |
          node download-translations.mjs
          echo "Content of downloaded Arabic translations:"
          cat src/locale/messages.ar.xlf
          echo "Content of local Arabic translations before build:"
          cat src/locale/messages.ar.xlf

      - name: Build multilingual app
        run: |
          npm run build -- --configuration=production --localize
          echo "Build output structure:"
          ls -R dist/angular-todo-app/browser/

      - name: List build output
        run: |
          echo "Build output structure:"
          ls -R dist/angular-todo-app/browser/

      - name: Create language redirects
        run: |
          cd dist/angular-todo-app/browser
          # Create index.html that redirects to /fr/ by default
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>Redirecting...</title>
              <script>
                // Get browser language
                var lang = navigator.language || navigator.userLanguage;
                lang = lang.split('-')[0];
                
                // Map of supported languages
                var supported = ['fr', 'en', 'ar'];
                
                // Default to 'fr' if language not supported
                if (!supported.includes(lang)) {
                  lang = 'fr';
                }
                
                // Redirect to appropriate language version
                window.location.replace('/angular-todo-app/' + lang + '/');
              </script>
            </head>
            <body>
              <h1>Redirecting to your preferred language...</h1>
              <p>If you are not redirected, please choose a language:</p>
              <ul>
                <li><a href="/angular-todo-app/fr/">Français</a></li>
                <li><a href="/angular-todo-app/en/">English</a></li>
                <li><a href="/angular-todo-app/ar/">العربية</a></li>
              </ul>
            </body>
          </html>
          EOF

          # Create 404.html pages for each language
          for lang in fr en ar; do
            if [ -d "$lang" ]; then
              cp $lang/index.html $lang/404.html
            fi
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
